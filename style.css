/* Import fonts */
@import url('https://fonts.googleapis.com/css2?family=VT323&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Geostar+Fill&display=swap');

/* Override default style */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* Style bordy and anrrange elements */
body {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgb(2, 18, 24);
}

/* Style game console container and arrange content */
.gameContainer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

/* Style game console and arrange elements */
.roshamBox {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border-radius: 45%;
    margin-top: 3.5rem;
    background-image: url("https://images.unsplash.com/photo-1597495529689-45d6da6fcbac?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80");
    box-shadow: rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px;
}

/* Style led bar and arrange content */
.ledBar {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 24px;
    margin-top: 40px;
}

/* Set default led style */
.led {
    border: 1px solid rgb(58, 105, 103);
    border-radius: 50%;
    background-color: rgb(0, 0, 0);
    padding: 2px;
}

/* Set led flash animation keyframes */
@keyframes ledFlash {
    0% {background-color: black;}
    50% {background-color: white;}
    100% {background-color: black;}
}

/* Style display bar and arrange content */
.displayBar {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 16px 24px;
}

/* Style screen border and arrange content */
.screenBorder {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgba(28, 34, 37, 0.973);
    border-radius: 40%;
    margin: 12px 2rem;
    padding: 16px;
}

/* Style display area and arrange content */
.displayArea {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 320px;
    width: 400px;
    position: relative;
    background-color: rgb(50, 70, 55);
    border-radius: 40%;
}

/* Set idle screen default parameters */
#idleScreen {
    display: none;
}

/* Set idle screen open state parameters */
#idleScreen.open {
    display: flex;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 40%;
    background-color: rgb(31, 34, 31);
}

/* Set start screen default parameters */
#startScreen {
    display: none;
}

/* Set start screen open state parameters */
#startScreen.open {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 40%;
    padding: 2rem;
    background-color: rgb(15, 56, 15);
    font: 2rem 'VT323', sans-serif;
}

/* Style start screen content */
#loadAnim {
    width: 320px;
    height: 120px;
    border-radius: 40%;
}

#loadAnim > img {
    width: 320px;
    height: 120px;
    object-fit: cover;
    border-radius: inherit;
}

#startMsg,
#playMsg {
    text-align: center;
    color: rgb(155, 188, 15);
}

/* Set game screen default state parameters */
#gameScreen {
    display: none;
}

/* Set game screen open state parameters */
#gameScreen.open {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 8px;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 40%;
    padding: 2rem;
    background-color: rgb(15, 56, 15);
    font: 2rem 'VT323', sans-serif;
}

/* Align round animation content position */
#roundAnim {
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Set status message display style */
#rndMsg,
#scoreBoard,
#finalResult {
    text-align: center;
    color: rgb(155, 188, 15);
}

/* Set ending screen default style */
#endScreen {
    display: none;
}

/* Set ending screen open state style */
#endScreen.open {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 8px;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 40%;
    padding: 2rem;
    background-color: rgb(15, 56, 15);
    font: 3rem 'VT323', sans-serif;
}

/* Set reload screen default style */
#reloadScreen {
    display: none;
}

/* Set reload screen open state style */
#reloadScreen.open {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    border-radius: 40%;
    background-color: #0f380f;
    padding: 2rem;
    font: 2rem 'VT323', sans-serif;
}

/* Set reload image parameters */
#reloadImg > img {
    width: 320px;
    height: 120px;
    border-radius: 40%;
}

/* Set reload message parameters */
#reloadMsg {
    text-align: center;
    color: rgb(155, 188, 15);
}

/* Style button bar and arrange elements */
.btnsBar {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    height: 15rem;
}

/* Style game buttons container */
.gameBtns {
    display: flex;
    justify-content: center;
    height: 8rem;
    gap: 1rem;
}

/* Set default game button style */
.gameBtns > button {
    background-color: rgb(10, 29, 28);
    border: 0;
    width: 4rem;
    height: 4rem;
    border-radius: 100%;
    color: #fff;
    cursor: pointer;
    display: inline-block;
    font-family: 'Roboto', sans-serif;
    font-size: 2rem;
    font-weight: 900;
    outline: 0;
    padding: 8px;
    position: relative;
    text-align: center;
    text-decoration: none;
    transition: all .3s;
    user-select: none;
}

/* Set game button style before hover */
.gameBtns > button:before {
    background-color: initial;
    background-image: linear-gradient(rgb(255, 255, 255) 0, rgba(255, 255, 255, 0) 100%);
    border-radius: 125px;
    content: "";
    height: 87%;
    left: 4%;
    opacity: .3;
    position: absolute;
    top: 0;
    transition: all .3s;
    width: 90%;
}

/* Style game button while hovered */
.gameBtns > button:hover {
    box-shadow: rgba(255, 255, 255, .2) 0 3px 2px inset, rgba(0, 0, 0, .1) 0 3px 5px, rgba(0, 0, 0, .1) 0 10px 13px;
    transform: scale(1.05);
}

/* Align rock and scissors */
#rock,
#scissors {
    align-self: flex-start;
}

/* Style rock button default and on hover */
#rock {
    color: rgb(155, 93, 74);
}

#rock:hover {
    color: rgb(255, 60, 0);
}

/* Style paper button default and on hover */
#paper {
    align-self: flex-end;
    color: rgb(89, 114, 25);
}

#paper:hover {
    color: rgb(173, 255, 47);
}

/* Style scissors button default and on hover */
#scissors {
    color: rgb(72, 72, 211);
}

#scissors:hover {
    color: rgb(0, 255, 255);
}

/* Style utility buttons container and arrange elements */
.utilityBtns {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex: 1;
    gap: 32px;
}

/* Set utility button container parameters */
.uBtnCont {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
}

/* Align utility buttons */
.uBtnCont:first-child,
.uBtnCont:nth-child(3) {
    align-self: flex-end;
}

/* Style utility button container text */
.uBtnCont > p {
    font: 1rem 'Geostar Fill', sans-serif;
    color: rgb(2, 6, 26);
    text-shadow: 0px 1px 2px rgb(0, 0, 0);
}

/* Set utility button default style */
.uBtnCont > button {
    background-color: rgb(10, 29, 28);
    border: 0;
    width: 32px;
    height: 8px;
    border-radius: 50%;
    color: rgb(255, 255, 255);
    cursor: pointer;
    display: inline-block;
    outline: 0;
    padding: 8px;
    position: relative;
    transition: all .3s;
    user-select: none;
}

/* Set utility button style before hover */
.uBtnCont > button:before {
    background-color: initial;
    background-image: linear-gradient(#fff 0, rgba(255, 255, 255, 0) 100%);
    border-radius: 50%;
    content: "";
    height: 80%;
    left: 4%;
    opacity: .3;
    position: absolute;
    top: 0;
    transition: all .3s;
    width: 90%;
}
/* Set utility button hover style */

.uBtnCont > button:hover {
    box-shadow: rgba(255, 255, 255, .2) 0 3px 2px inset, rgba(0, 0, 0, .1) 0 3px 5px, rgba(0, 0, 0, .1) 0 10px 13px;
    transform: scale(1.05);
}

/* Style logo bar and arrange content */
.logoBar {
    display: flex;
    margin: 0 0 2rem 0;
    padding: 2rem;
    font: 1.5rem 'Geostar Fill', sans-serif;
    color: rgb(2, 18, 24);
    text-shadow: 0px 1px 3px rgb(77, 77, 77);
}

/* Style footer and arrange content */
.footer {
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 24px;
}

/* Style footer content */
a > img {
    align-self: center;
    width: 25%;
}

/* MEDIA QUERIES */

@media screen and (max-width: 544px) {

    .roshamBox {
        margin: 0;
        width: 100vw;
        height: 100vh;
    }

    .ledBar {
        margin-top: 1rem;
    }

    .displayBar {
        padding: 0;
    }

    .screenBorder {
        margin: 1rem 0;
        padding: auto;
    }

    .displayArea {
        max-width: 350px;
        min-height: 360px;
    }
}